
---------------------------
Terminology
------------
	# Most Scala developers prefer 'match' Expression over 'if' Experssion #32
	
---------------------------
Syntax
------------
	<expression> match {
		case <pattern match> => <expression>
		[case...]
	}
	#NOTE : Multiple expressions can be used through => but NOT recommended #32
		  : When no Pattern is matched, we will 
		  	get, 'scala.MatchError'(32 elided... message) #34
---------------------------
Example
------------
	scala> val x = 10; val y = 20   #32

	scala> val max = x > y match {
		case true => x
	 	case false => y
	}
	max: Int = 20
	
	
****************************************************************************************
Pattern Alternative
****************************************************************************************

-----------------------
Syntax
---------
case <pattern 1> | <pattern 2> .. => <one or more expressions>

-----------------------
Example
---------
	scala> val kind = day match {
		case "MON" | "TUE" | "WED" | "THU" | "FRI" =>
		"weekday"
		case "SAT" | "SUN" =>
		"weekend"
	}

	
	
	