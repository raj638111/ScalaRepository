Explanation
-------------------------------------------

	# 	Is a way to guarantee that Trait will only extend a particular type(Class)  #180
		# The Trait in this case becomes a sub type of that Type(Class)
		 
	# 	Provides way to extend a Class without Specifying(Hard coding) 
		its Input Parameter #182
		
Syntax
-------------------------------------------

	trait ..... { <identifier>: <type> => .... }  #180
	
	
Example
-------------------------------------------

	scala> class TestSuite(suiteName: String) { def start() {} }
		defined class TestSuite
		
	scala> trait RandomSeeded { self: TestSuite =>
			def randomStart() {
				util.Random.setSeed(System.currentTimeMillis)
				self.start()
			}
		}
		defined trait RandomSeeded
		
	scala> class IdSpec extends TestSuite("ID Tests") with RandomSeeded {
			def testId() { println(util.Random.nextInt != 1) }
			override def start() { testId() }
			println("Starting...")
			randomStart()
		}
		defined class IdSpec
	
		